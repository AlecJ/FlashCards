# Build frontend
FROM node:17.5.0-slim as build-vue
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
COPY ./src/ui/package*.json ./
RUN npm install
COPY ./src/ui .
RUN npm run build

# Final image
FROM nginx:stable-alpine as production
LABEL maintainer "Alec Jordan <alecbjordan@gmail.com>"
WORKDIR /app
RUN apk update && apk add --no-cache python3 && \
    python3 -m ensurepip && \
    rm -r /usr/lib/python*/ensurepip && \
    pip3 install --upgrade pip setuptools && \
    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
    rm -r /root/.cache
RUN apk add --virtual .build-deps gcc libxml2-dev libxslt-dev libressl-dev libffi-dev freetds-dev python3-dev musl-dev linux-headers postgresql-dev
# Install Dependencies
COPY src/requirements.txt .
# Cython needed first
RUN pip install Cython==0.29.21
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install gunicorn[gevent]
# Copy the compiled frontend from stage 1
COPY --from=build-vue /app/dist /usr/share/nginx/html
# Copy Application Files
COPY src/ ./src
COPY auto_app.py .
COPY migrations/ ./migrations
COPY .env.PROD .env
COPY deploy/nginx/default.conf /etc/nginx/conf.d/default.conf
# Nginx uses port 8080
EXPOSE 8080
# Set Entry/Command
CMD gunicorn --worker-class gevent --workers 2 --bind 0.0.0.0:5000 auto_app:app --max-requests 10000 --timeout 5 --keep-alive 5 --log-level info --daemon && \
    sed -i -e 's/$PORT/'"$PORT"'/g' /etc/nginx/conf.d/default.conf && \
    nginx -g 'daemon off;'
